package codigo;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

/**
 *
 * @author alexj
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /*
    Necesitamos 3 variables para conectar con una BBDD:
        · Conexion al server de la BBDD
        · Estado de la conexion (conectada, espera...)
        · Resultado de la query a la BBDD
     */
    Connection conexion; //Almacena la conexion al servidor de la BBDD
    Statement estado; //Estado de la conexion
    ResultSet resultado; //resultado de los atributos de la BBDD

    String[][] arrayResultado;
    //declaramos un array list para guardar el resultado de la consulta
    ArrayList <String[]> lista = new ArrayList();

    
    
    private void consulta1() {
        int altura = 0;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            //indico los parametros de la conexion
            conexion = DriverManager.getConnection("jdbc:mysql://192.168.56.101/liga", "root", "admin.1234");

            //realizo la conexion
            estado = conexion.createStatement();

            //realizo la consulta
            resultado = estado.executeQuery("SELECT * FROM liga.equipos");
            
            while(resultado.next()){
                String [] aux = new String[3];
                aux[0] = resultado.getString("nombre");
                aux[1] = resultado.getString("web");
                aux[2] = resultado.getString("ciudad");
                lista.add(aux);
            }
            
            /*
            al realizar la consulta y tengo el resultado, 
            averiguamos cuantos registros son en la consulta
             */
//            resultado.last();//te lleva al ultimo elemento
//            System.out.println(resultado.getRow());//te dice que numero de elemento es

            /*
            se inicializa el array para gardar los resultados el 3 
            es por los campos que queremos sacar por cada registro
             */
//            arrayResultado = new String[resultado.getRow()][3];
//            resultado.first();
            //leemos el resultado y lo imprimimos en el terminal
            //el equivalente al cursor de SQLServer
//            do {
//                arrayResultado[resultado.getRow() - 1][0] = resultado.getString("id_equipo");
//                arrayResultado[resultado.getRow() - 1][1] = resultado.getString("nombre");
//                arrayResultado[resultado.getRow() - 1][2] = resultado.getString("web");
//                /*
//                Se hace el do/while para que primero lea los elementos y despues pase al siguiente
//                sino, con un while solo, el primer elemento en este caso el Barcelona lo pone a Null, 
//                porq no lo ha leido y ha pasado al siguiente
//                 */
//
//            } while (resultado.next());
        }//hemos importado la libreria MySQL DJBC para que no de error inicial
        catch (ClassNotFoundException ex) {
            System.out.println("No se ha encontrado el Driver de la BBDD");
        } catch (SQLException e) {
            System.out.println("No se ha podido contectar a la BBDD");
        }
    }

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        consulta1();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        contenedorEquipos = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Nombre de Equipo");

        javax.swing.GroupLayout contenedorEquiposLayout = new javax.swing.GroupLayout(contenedorEquipos);
        contenedorEquipos.setLayout(contenedorEquiposLayout);
        contenedorEquiposLayout.setHorizontalGroup(
            contenedorEquiposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 362, Short.MAX_VALUE)
        );
        contenedorEquiposLayout.setVerticalGroup(
            contenedorEquiposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 389, Short.MAX_VALUE)
        );

        jButton1.setText("Cargar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(contenedorEquipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(7, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(contenedorEquipos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        //hacemos un bucle para coger todos los datos de la consulta
        for (int i = 0; i < lista.size(); i++) {
            jTextArea1.append(lista.get(i)[0] + " " + lista.get(i)[1] + " " + lista.get(i)[2] + "\n" + "\n");
        }
    }//GEN-LAST:event_jButton1MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contenedorEquipos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
